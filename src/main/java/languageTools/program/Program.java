/**
 * The GOAL Grammar Tools. Copyright (C) 2014 Koen Hindriks.
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

package languageTools.program;

import java.io.File;

import krTools.parser.SourceInfo;

/**
 * Generic interface for all types of programs, i.e., MAS programs, agent
 * programs, modules, and tests, that may be generated by the GOAL Grammar
 * Tools.
 */
public abstract class Program {
	/**
	 * The source used to create this {@link Program}.
	 */
	private final SourceInfo info;
	/**
	 * Flag to signal whether MAS file has been validated or not.
	 *
	 * This flag should be set to false if any (serious) errors were found in
	 * the MAS file that prevent executing the MAS. The flag does not say
	 * anything about the validity of other (referenced) files such as agent or
	 * environment files.
	 */
	private boolean valid = false;

	public Program(SourceInfo info) {
		this.info = info;
	}

	/**
	 * Information about the source used to construct this program.
	 */
	public SourceInfo getSourceInfo() {
		return this.info;
	}

	/**
	 * @return The source file used to construct this program.
	 */
	public File getSourceFile() {
		return this.info.getSource();
	}

	/**
	 * @return Whether the program is valid or not. Also see
	 *         {@link #setValid(boolean)}.
	 */
	public boolean isValid() {
		return this.valid;
	}

	/**
	 * Sets whether program is valid or not; is set by
	 * {@link languageTools.analyzer.Validator}. Means that validator for
	 * program did not find any parsing or validation errors. Program validation
	 * can have generated warnings though.
	 *
	 * @param valid
	 */
	public void setValid(boolean valid) {
		this.valid = valid;
	}

	/**
	 * Builds a string representation of this {@link Program}.
	 *
	 * @param linePrefix
	 *            A prefix used to indent parts of a program.
	 * @param indent
	 *            A unit to increase indentation with, e.g., a single space or
	 *            tab.
	 * @return A string that consists of the program parts.
	 */
	public abstract String toString(String linePrefix, String indent);
}
